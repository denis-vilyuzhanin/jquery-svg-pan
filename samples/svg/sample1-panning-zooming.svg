<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" 
  "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
 <svg xmlns="http://www.w3.org/2000/svg" version="1.1"
      width="600px" height="600px" 
         onload="init(evt)">
  
  
  
  <script type="text/ecmascript">
  <![CDATA[
    var transMatrix = [1,0,0,1,0,0];
    
        
    function init(evt) {
        if ( window.svgDocument == null ) {
          svgDoc = evt.target.ownerDocument;
        }
        viewport = svgDoc.getElementById("viewport");
        root = document.documentElement;
        width  = evt.target.getAttributeNS(null, "width");
        height = evt.target.getAttributeNS(null, "height");
    }
    
    function setCTM(element, matrix) {
        var s = "matrix(" + matrix.a + "," + matrix.b + "," + matrix.c + "," + matrix.d + "," + matrix.e + "," + matrix.f + ")";
    	element.setAttribute("transform", s);
    }
  
    function pan(dx, dy) {         
        /*transMatrix[4] += dx;
        transMatrix[5] += dy;
        newMatrix = "matrix(" +  transMatrix.join(' ') + ")";
        viewport.setAttributeNS(null, "transform", newMatrix);*/
        var stateTf = viewport.getCTM();
        var newTf = stateTf.translate(dx, dy);
        setCTM(viewport, newTf);
    }
    
    function zoom(scale) {
        /*for (var i=0; i<transMatrix.length; i++) {
            transMatrix[i] *= scale;
        }

        transMatrix[4] += (1-scale)*width/2;
        transMatrix[5] += (1-scale)*height/2;
    	        
        newMatrix = "matrix(" +  transMatrix.join(' ') + ")";
        viewport.setAttributeNS(null, "transform", newMatrix);*/
        /*var bbox = viewport.viewportElement.getBBox();
    
        var centroid = root.createSVGPoint();

        centroid.x = bbox.widht / 2;
	    centroid.y = bbox.height / 2;
        
        var stateTf = viewport.getCTM();
        centroid = centroid.matrixTransform(stateTf.inverse());
        
        var k = root.createSVGMatrix().translate(centroid.x, centroid.y).scale(scale).translate(-centroid.x, -centroid.y);
        */
        var bbox = viewport.viewportElement.getBBox();
        var centroid = root.createSVGPoint();
        centroid.x = bbox.width / 2;
        centroid.y = bbox.height / 2;
        centroid = centroid.matrixTransform(viewport.getCTM().inverse());
        console.log(centroid);
        
        var stateTf = viewport.getCTM();
        var k = root.createSVGMatrix().translate(centroid.x, centroid.y).scale(scale).translate(-centroid.x, -centroid.y);
        var newTf = stateTf.multiply(k);
        setCTM(viewport, newTf);
    }
  ]]>
  </script>

  <rect x="0" y="0" width="600px" height="600px" 
        fill="gray" stroke="blue" stroke-width="12"  />

   <g id="viewport" >
       <rect x="100" y="100" width="200px" height="200px" 
        fill="white" stroke="black" stroke-width="3"  />
   </g>
   
   
   
   <style>
  .compass{
    fill:  #fff;
    stroke:  #000;
    stroke-width:  1.5;
  }
  .button{
    fill:  #225EA8;
    stroke:  #0C2C84;
    stroke-miterlimit:    6;
    stroke-linecap:  round;
  }
  .button:hover{
    stroke-width:  2;
  }
  .plus-minus{
    fill:  #fff;
    pointer-events: none;
  }
</style>

<circle cx="50" cy="50" r="42" fill="white" opacity="0.75"/>
<path class="button" onclick="pan(0,-50)"
  d="M50 10 l12 20 a40,70 0 0,0 -24,0z" />
<path class="button" onclick="pan(-50,0)"
  d="M10 50 l20 -12 a70,40 0 0,0 0,24z" />
<path class="button" onclick="pan(0,50)"
  d="M50 90 l12 -20 a40,70 0 0,1 -24,0z" />
<path class="button" onclick="pan(50,0)"
  d="M90 50 l-20 -12 a70,40 0 0,1 0,24z" />
  
<circle class="compass" cx="50" cy="50" r="20"/>
<circle class="button"  cx="50" cy="41" r="8"
  onclick="zoom(0.8)"/>
<circle class="button"  cx="50" cy="59" r="8"
  onclick="zoom(1.25)"/>

<rect class="plus-minus" x="46" y="39.5"
  width="8" height="3"/>
<rect class="plus-minus" x="46" y="57.5"
  width="8" height="3"/>
<rect class="plus-minus" x="48.5" y="55"
 width="3" height="8"/>
 
 <line x1 ="0px" y1="300px" x2="600px" y2="300px" stroke="black" stroke-width="1"/>
 <line x1 ="300px" y1="0px" x2="300px" y2="600px" stroke="black" stroke-width="1"/>
 
</svg>